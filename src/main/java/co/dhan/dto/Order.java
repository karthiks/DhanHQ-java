package co.dhan.dto;

import co.dhan.constant.*;
import co.dhan.helper.BigDecimalUtils;
import lombok.Data;
import lombok.Getter;

import java.math.BigDecimal;

@Data
public class Order {
    /**
     * User specific identification generated by Dhan
     */
    private String dhanClientId;
    private String orderId;
    private String exchangeOrderId;

    /**
     * The user/partner generated id for tracking back.
     * Its length >=0 and <=25 characters.
     */
    private String correlationId;

    /**
     * Exchange standard identification for each scrip
     */
    private String securityId;

    private OrderStatus orderStatus;
    private TransactionType transactionType;
    private ExchangeSegment exchangeSegment;
    private ProductType productType;
    private OrderType orderType;
    private Validity validity;
    private String tradingSymbol;
    private int quantity;
    private int quantity1;

    /**
     * Number shares visible in the market depth
     */
    private int disclosedQuantity;

    private boolean afterMarketOrder;
    private AMOTime amoTime;
    private LegName legName;
    private  String createTime;
    private  String updateTime;
    private  String exchangeTime;
    private  String drvExpiryDate;
    private OptionType drvOptionType;
    private String omsErrorCode;
    private String omsErrorDescription;
    private String algoId;
    private int remainingQuantity;
    private int filledQty;
    private OrderFlag orderFlag;

    @Getter private BigDecimal price;
    @Getter private BigDecimal price1;
    @Getter private BigDecimal triggerPrice;
    @Getter private BigDecimal triggerPrice1;
    @Getter private BigDecimal boProfitValue;
    @Getter private BigDecimal boStopLossValue;
    @Getter private BigDecimal drvStrikePrice;
    @Getter private BigDecimal averageTradedPrice;

    public Order() {
        this.validity = Validity.DAY;
        this.amoTime = AMOTime.OPEN;
    }

    public void setPrice(String price) {
        this.price = BigDecimalUtils.toBigDecimal(price);
    }

    public void setPrice1(String price) {
        this.price1 = BigDecimalUtils.toBigDecimal(price);
    }

    public void setTriggerPrice(String triggerPrice) {
        this.triggerPrice = BigDecimalUtils.toBigDecimal(triggerPrice);
    }

    public void setTriggerPrice1(String triggerPrice1) {
        this.triggerPrice1 = BigDecimalUtils.toBigDecimal(triggerPrice1);
    }

    public void setBoProfitValue(String boProfitValue) {
        this.boProfitValue = BigDecimalUtils.toBigDecimal(boProfitValue);
    }

    public void setBoStopLossValue(String boStopLossValue) {
        this.boStopLossValue = BigDecimalUtils.toBigDecimal(boStopLossValue);
    }

    public void setDrvStrikePrice(String drvStrikePrice) {
        this.drvStrikePrice = BigDecimalUtils.toBigDecimal(drvStrikePrice);
    }

    public void setAverageTradedPrice(String averageTradedPrice) {
        this.averageTradedPrice = BigDecimalUtils.toBigDecimal(averageTradedPrice);
    }

}
